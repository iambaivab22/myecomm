{"ast":null,"code":"export const reducer = (state, action) => {\n  let product;\n  let index;\n  let updatedprice;\n  let updatedqty;\n  const {\n    shoppingcart,\n    totalprice,\n    qty\n  } = state;\n  console.log(shoppingcart);\n\n  switch (action.type) {\n    case \"Addtocart\":\n      console.log(action.id);\n      console.log(shoppingcart);\n      const check = shoppingcart.filter(product => product.id == action.id);\n      console.log(check);\n\n      if (check.length == 1) {\n        product = action.data;\n        product.qty = product.qty + 1;\n        product.eachtotalprice = product.qty * product.price;\n        updatedprice = totalprice + product.price;\n        updatedqty = qty + 1;\n        console.log(updatedprice);\n        return {\n          shoppingcart: [...shoppingcart],\n          totalprice: updatedprice,\n          qty: updatedqty\n        };\n      } else {\n        product = action.data;\n        product[\"qty\"] = 1;\n        product[\"eachtotalprice\"] = product.price;\n        updatedqty = qty + 1;\n        updatedprice = totalprice + product.price;\n        return {\n          shoppingcart: [product, ...shoppingcart],\n          totalprice: updatedprice,\n          qty: updatedqty\n        };\n      }\n\n      break;\n\n    case \"delete\":\n      const filtered = shoppingcart.filter(product => product.id !== action.id);\n      product = action.cart;\n      updatedqty = qty - product.qty;\n      updatedprice = totalprice - product.price * product.qty;\n      return {\n        shoppingcart: [...filtered],\n        totalprice: updatedprice,\n        qty: updatedqty\n      };\n      break;\n\n    case \"increment\":\n      product = action.cart;\n      product.qty = product.qty + 1;\n      product.eachtotalprice = product.qty * product.price;\n      updatedprice = totalprice + product.price;\n      updatedqty = qty + 1;\n      console.log(updatedprice);\n      return {\n        shoppingcart: [...shoppingcart],\n        totalprice: updatedprice,\n        qty: updatedqty\n      };\n      break;\n\n    case \"decrement\":\n      product = action.cart;\n      product.qty = product.qty - 1;\n      product.eachtotalprice = product.qty * product.price;\n      updatedprice = totalprice - product.price;\n      updatedqty = qty - 1;\n      console.log(updatedprice);\n      return {\n        shoppingcart: [...shoppingcart],\n        totalprice: updatedprice,\n        qty: updatedqty\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ACER/Documents/ecomm/src/Usereducer.js"],"names":["reducer","state","action","product","index","updatedprice","updatedqty","shoppingcart","totalprice","qty","console","log","type","id","check","filter","length","data","eachtotalprice","price","filtered","cart"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  let product;\n  let index;\n  let updatedprice;\n  let updatedqty;\n\n  const { shoppingcart, totalprice, qty } = state;\n  console.log(shoppingcart);\n  switch (action.type) {\n    case \"Addtocart\":\n      console.log(action.id);\n      console.log(shoppingcart);\n      const check = shoppingcart.filter((product) => product.id==action.id);\n      console.log(check);\n      if (check.length==1) {\n        product = action.data;\n        product.qty =product.qty+1;\n       product.eachtotalprice = product.qty * product.price;\n      updatedprice = totalprice + product.price;\n      updatedqty = qty + 1;\n      console.log(updatedprice);\n      return {\n        shoppingcart: [...shoppingcart],\n        totalprice: updatedprice,\n        qty: updatedqty,\n      };\n       \n      } else {\n        product = action.data;\n        product[\"qty\"] = 1;\n        product[\"eachtotalprice\"] = product.price;\n        updatedqty = qty + 1;\n        updatedprice = totalprice + product.price;\n\n        return {\n          shoppingcart: [product, ...shoppingcart],\n          totalprice: updatedprice,\n          qty: updatedqty,\n        };\n      }\n      break;\n\n    case \"delete\":\n      const filtered = shoppingcart.filter(\n        (product) => product.id !== action.id\n      );\n      product = action.cart;\n      updatedqty = qty - product.qty;\n      updatedprice = totalprice - product.price * product.qty;\n\n      return {\n        shoppingcart: [...filtered],\n        totalprice: updatedprice,\n        qty: updatedqty,\n      };\n      break;\n\n    case \"increment\":\n      product = action.cart;\n      product.qty = product.qty + 1;\n      product.eachtotalprice = product.qty * product.price;\n      updatedprice = totalprice + product.price;\n      updatedqty = qty + 1;\n      console.log(updatedprice);\n      return {\n        shoppingcart: [...shoppingcart],\n        totalprice: updatedprice,\n        qty: updatedqty,\n      };\n\n      break;\n\n    case \"decrement\":\n      product = action.cart;\n      product.qty = product.qty - 1;\n      product.eachtotalprice = product.qty * product.price;\n      updatedprice = totalprice - product.price;\n      updatedqty = qty - 1;\n      console.log(updatedprice);\n      return {\n        shoppingcart: [...shoppingcart],\n        totalprice: updatedprice,\n        qty: updatedqty,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}